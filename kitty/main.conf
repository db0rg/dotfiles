# Kitty configuration with tmux-like features
# Include this file in your main kitty.conf with:
# include ~/dotfiles/kitty-tmux.conf

# ================================
# Window and Tab Management
# ================================

# Create new windows/tabs (like tmux windows)
map cmd+t new_tab
map cmd+shift+t new_tab_with_cwd

# Navigate between tabs (like tmux windows)  
map cmd+1 goto_tab 1
map cmd+2 goto_tab 2
map cmd+3 goto_tab 3
map cmd+4 goto_tab 4
map cmd+5 goto_tab 5
map cmd+6 goto_tab 6
map cmd+7 goto_tab 7
map cmd+8 goto_tab 8
map cmd+9 goto_tab 9
map cmd+0 goto_tab 10

# Switch to last active tab (like tmux last-window)
map cmd+a goto_tab -1

# Cycle through tabs
map cmd+shift+] next_tab
map cmd+shift+[ previous_tab

# ================================
# Splits/Panes (like tmux panes)
# ================================

# Create splits
map cmd+enter launch --location=hsplit --cwd=current
map cmd+shift+enter launch --location=vsplit --cwd=current

# Navigate between panes (vim-style like your tmux config)
map cmd+h neighboring_window left
map cmd+j neighboring_window down
# conflicts with default clear_terminal but navigation is more important
map cmd+k neighboring_window up
map cmd+l neighboring_window right  # conflicts with next_layout but navigation is more important

# Move windows
map cmd+shift+h move_window left
map cmd+shift+j move_window down
map cmd+shift+k move_window up
map cmd+shift+l move_window right

# Focus last active window (like tmux last-pane)
map cmd+o focus_visible_window

# Zoom/unzoom pane (like tmux zoom)
map cmd+z toggle_layout stack

# ================================
# Copy Mode (like tmux copy-mode)
# ================================

# Enter scrollback/copy mode
map cmd+[ show_scrollback

# Copy to clipboard
copy_on_select yes
map cmd+c copy_to_clipboard
map cmd+v paste_from_clipboard

# Vim-style selection in scrollback
#map --mode=scrollback v send_key v
#map --mode=scrollback y copy_to_clipboard_and_clear_selection
#map --mode=scrollback escape clear_selection

# Use vim as scrollback pager (vim -u NONE for minimal config)
scrollback_pager nvim - -c "w! /tmp/kitty_scrollback" -c "set clipboard+=unnamed" -c "set mouse=a" -c "term cat /tmp/kitty_scrollback" -c "normal G"

# Also copy selection to clipboard automatically on select
strip_trailing_spaces smart

# ================================
# Session Management
# ================================

# Start new OS window (like tmux new-session)
map cmd+n new_os_window

# Detach (minimize window - closest to tmux detach)
map cmd+shift+d minimize

# ================================  
# Appearance
# ================================

# Tab bar (like tmux status bar)
tab_bar_style powerline
#tab_powerline_style slanted
tab_title_template "{fmt.bg.red}{fmt.fg.white}{bell_symbol}{fmt.bg.yellow}{activity_symbol}{fmt.bg.tab}{fmt.fg.tab}{index}: {tab.last_focused_progress_percent}{title}"
active_tab_title_template "{index}: {title}✍"

# Show tab bar only when multiple tabs
tab_bar_min_tabs 2

# Tab colors (customize to match your theme)
active_tab_foreground   #f9f2dc
active_tab_background   #5f87af
inactive_tab_foreground #7a7a7a
inactive_tab_background #c6c6c6

# Tab with bell activity (muted red from desert-light theme)
bell_on_tab "🔔"
window_alert_on_bell yes
tab_activity_symbol "👀"

# Window borders
window_border_width 1px
draw_minimal_borders yes
active_border_color #5f87af
inactive_border_color #cccccc

# ================================
# Behavior
# ================================

# Don't quit when closing last window (like tmux)
close_on_child_death no

# Confirm before quitting
confirm_os_window_close 1

# Enable remote control (for scripting)
allow_remote_control yes

# Window padding
window_padding_width 2

# Bell behavior
enable_audio_bell no
visual_bell_duration 0.3

# Mouse support
mouse_hide_wait 3.0

# ================================
# Performance
# ================================

# Sync to monitor refresh rate
sync_to_monitor yes

# Reduce latency
input_delay 1
repaint_delay 6

# ================================
# Shell Integration
# ================================

# Set terminal title  
shell_integration enabled
terminal_select_modifiers ctrl+alt

# ================================
# URL Handling
# ================================

# Click to open URLs
open_url_with default
url_style curly
detect_urls yes

# ================================  
# Advanced tmux-like features
# ================================

# Create a new window with specific directory
map cmd+shift+n launch --type=os-window --cwd=current

# Move tabs around
map cmd+shift+. move_tab_forward
map cmd+shift+, move_tab_backward

# Broadcast input to all panes (like tmux synchronize-panes)
map cmd+shift+i launch --allow-remote-control kitty +kitten broadcast

# Show hints for quick navigation (like tmux's display-panes)
map cmd+p>f kitten hints --type path --program -
map cmd+p>l kitten hints --type line --program -
map cmd+p>w kitten hints --type word --program -
map cmd+p>h kitten hints --type hash --program -

# ================================
# Command Prompt (like tmux's :)
# ================================

# Open kitty shell for running commands
map cmd+shift+p kitty_shell window

# ================================
# Scrollback Configuration
# ================================

# Set a very large scrollback buffer
# (measured in lines, negative value means unlimited)
scrollback_lines 500000

# ================================
# Terminal Clearing Options
# ================================

# Kitty has 3 clearing modes:
# - clear_all: Clears entire terminal including scrollback
# - clear_terminal: Clears visible screen, preserves scrollback
# - clear_terminal to_cursor: Clears from start to cursor position

# Since cmd+k is used for navigation, alternative clear commands:
map cmd+ctrl+k clear_terminal clear active
map cmd+ctrl+l clear_terminal to_cursor active
map cmd+shift+k combine : clear_terminal clear active : clear_terminal to_cursor active

# ================================
# Additional keybindings for tmux users
# ================================

# Alternative prefix-style commands (optional)
# Uncomment to use ctrl+b as a prefix like tmux
# map ctrl+b>c new_tab
# map ctrl+b>% launch --location=vsplit
# map ctrl+b>" launch --location=hsplit
# map ctrl+b>w focus_visible_window
# map ctrl+b>x close_window
# map ctrl+b>z toggle_layout stack
# map ctrl+b>n next_tab
# map ctrl+b>p previous_tab

# ================================
# Layouts (like tmux preset layouts)  
# ================================

# Define custom layouts, enable all
#enabled_layouts splits,tall,fat,horizontal,vertical,grid,stack

# Switch between layouts (changed from cmd+l to avoid conflict with pane navigation)
map cmd+shift+space next_layout
map cmd+alt+space last_used_layout

# Quick layout shortcuts
map cmd+shift+0 goto_layout splits
map cmd+shift+1 goto_layout tall
map cmd+shift+2 goto_layout fat  
map cmd+shift+3 goto_layout horizontal
map cmd+shift+4 goto_layout vertical
map cmd+shift+5 goto_layout grid
map cmd+shift+6 goto_layout stack


macos_option_as_alt both
tab_bar_style custom
